# Localtunnel Server Configuration
# Copy this file to .env and customize the values

# Debug logging
# Enables debug output for localtunnel components
DEBUG=localtunnel*

# Server Configuration
# --------------------

# LT_PORT: Port for public tunnel traffic (default: 80)
# This is the port where external HTTP/HTTPS requests arrive
LT_PORT=80

# LT_ADDRESS: IP address to bind the public server (default: 0.0.0.0)
# Use 0.0.0.0 to listen on all interfaces, or specify a specific IP
LT_ADDRESS=0.0.0.0

# LT_SECURE: Enable HTTPS for tunnel traffic (default: false)
# Set to 'true' to proxy over HTTPS instead of HTTP
LT_SECURE=false

# LT_DOMAIN: Base domain name for tunnels
# Optional for regular domains (e.g., example.com)
# Required for subdomains (e.g., lt.example.com where clients become client-app.lt.example.com)
# LT_DOMAIN=tunnel.example.com

# Administrative Server Configuration
# -----------------------------------

# LT_ADMIN_PORT: Port for admin API (tunnel creation and management)
# If not specified, admin API runs on the same port as public traffic
# Use a separate port to isolate admin operations and enable firewall-based access control
# LT_ADMIN_PORT=8080

# LT_ADMIN_ADDRESS: IP address to bind the admin server (default: 0.0.0.0)
# When using a separate admin port, you can bind it to a specific IP for security
# LT_ADMIN_ADDRESS=127.0.0.1

# Client Connection Configuration
# -------------------------------

# LT_MAX_SOCKETS: Maximum TCP sockets per client (default: 10)
# Controls how many concurrent tunnel connections each client can establish
LT_MAX_SOCKETS=10

# LT_PORT_RANGE_START: Starting port for client TCP connections
# When specified (along with LT_PORT_RANGE_END), creates a pool of ports for client connections
# This enables firewall rules to restrict which IPs can create tunnel connections
# Example: LT_PORT_RANGE_START=10000

# LT_PORT_RANGE_END: Ending port for client TCP connections
# Must be specified together with LT_PORT_RANGE_START
# Example: LT_PORT_RANGE_END=10100

# Landing Page Configuration
# --------------------------

# LT_LANDING: Landing page URL for root requests
# When users access the root URL, they will be redirected to this page
# Example: LT_LANDING=https://example.com/tunnels

# Reverse Proxy Configuration
# ----------------------------

# LT_HTTP_PROXY_PORT: Public proxy port for HTTP traffic (used in generated tunnel URLs)
# When using a reverse proxy (like Traefik or Nginx), set this to the public HTTP port
# If not set, defaults to LT_PORT
# Use this when your reverse proxy listens on port 80 but forwards to a different internal port
# LT_HTTP_PROXY_PORT=80

# LT_HTTPS_PROXY_PORT: Public proxy port for HTTPS traffic (used in generated tunnel URLs)
# When using a reverse proxy with SSL termination, set this to the public HTTPS port
# If not set, defaults to LT_PORT
# Use this when your reverse proxy listens on port 443 but forwards to a different internal port
# LT_HTTPS_PROXY_PORT=443

# Grace Period & IP-based Subdomain Reservation
# ----------------------------------------------

# LT_GRACE_PERIOD: Grace period in milliseconds before removing disconnected tunnels (default: 30000)
# When a client disconnects, the server holds the subdomain for this period, allowing reconnection
# This is especially useful for development when restarting applications (Ctrl+C / npm start)
# Allows developers to maintain the same webhook URL during rapid development cycles
# LT_GRACE_PERIOD=30000

# LT_MAX_GRACE_PERIOD: Maximum allowed grace period in milliseconds (default: 300000)
# Limits how long a subdomain can be reserved (max 5 minutes)
# Prevents subdomains from being held indefinitely
# LT_MAX_GRACE_PERIOD=300000

# LT_IP_VALIDATION_STRICT: Enable strict IP validation mode (default: false)
# When 'true': Returns 409 error if a different IP tries to claim a subdomain during grace period
# When 'false': Silently assigns a random subdomain to different IPs (silent mode)
# Only the original IP can reclaim the subdomain during grace period
# LT_IP_VALIDATION_STRICT=false

# LT_TRUST_PROXY: Trust X-Forwarded-For headers from reverse proxy (default: false)
# Set to 'true' when running behind Traefik, Nginx, or other reverse proxies
# This ensures IP-based validation works correctly by reading the real client IP from proxy headers
# Must be enabled when using IP validation behind a reverse proxy
# LT_TRUST_PROXY=false

# LT_REQUEST_TIMEOUT: HTTP request timeout in milliseconds (default: 5000)
# How long the server waits for tunnel sockets before responding with 503 Service Unavailable
# Useful when clients are busy or temporarily offline during grace period
# During grace period, requests wait up to this timeout for client to reconnect
# LT_REQUEST_TIMEOUT=5000

# LT_WEBSOCKET_TIMEOUT: WebSocket upgrade timeout in milliseconds (default: 10000)
# How long the server waits for client reconnection before rejecting WebSocket upgrades
# During grace period, WebSocket upgrades wait up to this timeout for clients to come back online
# Allows WebSocket connections to succeed even if client is restarting
# LT_WEBSOCKET_TIMEOUT=10000

# LT_RETRY_AFTER: Retry-After header value in seconds (default: 5)
# How long clients should wait before retrying when server responds with 503 Service Unavailable
# Used when client is busy or temporarily offline
# LT_RETRY_AFTER=5

# LT_SOCKET_CHECK_INTERVAL: Socket availability check interval in milliseconds (default: 100)
# How often the server checks if client sockets become available during wait period
# Lower values = faster response, higher CPU usage
# LT_SOCKET_CHECK_INTERVAL=100

# HMAC Authentication (Optional)
# -------------------------------

# LT_HMAC_SECRET: Shared secret for HMAC-SHA256 authentication
# When set, all tunnel creation requests must include valid HMAC authentication
# The secret must be at least 32 characters long
# Required headers: Authorization (HMAC sha256=<signature>), X-Timestamp, X-Nonce
# LT_HMAC_SECRET=your-secret-key-at-least-32-characters-long

# FILE_LT_HMAC_SECRET: Alternative to LT_HMAC_SECRET - loads secret from file
# Useful for Docker secrets or Kubernetes secrets management
# The first line of the file will be used as the secret
# Priority: LT_HMAC_SECRET takes precedence over FILE_LT_HMAC_SECRET
# FILE_LT_HMAC_SECRET=/run/secrets/hmac_secret

# LT_HMAC_TIMESTAMP_TOLERANCE: Timestamp tolerance in seconds (default: 60)
# Requests with timestamps older/newer than this will be rejected
# Helps handle clock skew between client and server
# LT_HMAC_TIMESTAMP_TOLERANCE=60

# LT_HMAC_NONCE_THRESHOLD: Nonce age threshold in seconds (default: 3600)
# Nonces older than (timestamp - threshold) will be rejected
# Prevents replay attacks with old nonces
# LT_HMAC_NONCE_THRESHOLD=3600

# LT_HMAC_NONCE_CACHE_TTL: Nonce cache TTL in seconds (default: 7200)
# How long used nonces are kept in cache to prevent replay attacks
# Should be >= NONCE_THRESHOLD to ensure complete protection
# LT_HMAC_NONCE_CACHE_TTL=7200

# LT_NONCE_CLEANUP_INTERVAL: Nonce cache cleanup interval in milliseconds (default: 60000)
# How often the nonce cache removes expired entries
# Higher values = less CPU usage, but more memory usage for expired entries
# LT_NONCE_CLEANUP_INTERVAL=60000

# Example Configurations
# ----------------------

# Example 1: Basic setup (single port for everything)
# LT_PORT=80
# LT_DOMAIN=tunnel.example.com

# Example 2: Separate admin port for security
# LT_PORT=80
# LT_ADMIN_PORT=8080
# LT_ADMIN_ADDRESS=127.0.0.1
# LT_DOMAIN=tunnel.example.com

# Example 3: Full setup with port range and firewall control
# LT_PORT=80
# LT_ADMIN_PORT=8080
# LT_ADMIN_ADDRESS=10.0.1.100
# LT_PORT_RANGE_START=10000
# LT_PORT_RANGE_END=10100
# LT_DOMAIN=tunnel.example.com
# LT_MAX_SOCKETS=10

# Example 4: Behind reverse proxy (Traefik/Nginx) with SSL
# LT_PORT=3000                  # Internal port for public traffic
# LT_ADMIN_PORT=9000            # Internal port for admin API
# LT_HTTP_PROXY_PORT=80         # Proxy listens on port 80 (public HTTP)
# LT_HTTPS_PROXY_PORT=443       # Proxy listens on port 443 (public HTTPS)
# LT_SECURE=true                # Generate HTTPS URLs
# LT_DOMAIN=tunnel.example.com
# LT_PORT_RANGE_START=10000     # TCP raw ports (exposed directly, not through proxy)
# LT_PORT_RANGE_END=10100

# Example 5: Development setup with grace period (for WhatsApp webhooks, payment gateways, etc.)
# LT_PORT=3000                       # Internal port
# LT_DOMAIN=tunnel.example.com
# LT_SECURE=true
# LT_TRUST_PROXY=true                # Behind Traefik/Nginx for SSL
# LT_GRACE_PERIOD=30000              # 30 seconds - allows quick app restarts without losing webhooks
# LT_MAX_GRACE_PERIOD=300000         # Max 5 minutes
# LT_IP_VALIDATION_STRICT=false      # Silent mode - assign random subdomain to different IPs
# LT_REQUEST_TIMEOUT=5000            # Wait 5s for app to restart before returning 503
# LT_WEBSOCKET_TIMEOUT=10000         # Wait 10s for WebSocket reconnection
#
# Benefits of this setup:
# - Developer can restart app (Ctrl+C / npm start) and keep the same webhook URL
# - WhatsApp/Stripe/etc. webhooks received during restart are queued (up to 5s)
# - If reconnection happens within 5s, webhooks are processed automatically
# - If it takes longer, external services receive 503 with Retry-After header
